name: Releases

on:
  push:
    tags:
      - v*

jobs:

  build:
    name: Build package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.7' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python }}-pip-${{ hashFiles('**/requirements*.txt') }}-git-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python }}-pip-${{ hashFiles('**/requirements*.txt') }}
            ${{ runner.os }}-python-${{ matrix.python }}-pip-
            ${{ runner.os }}-python
            ${{ runner.os }}-

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel

      - name: Prepare environment
        run: pip freeze

      - name: Build package
        run: python setup.py bdist_wheel sdist

      - name: Check package
        run: twine check dist/*

      - name: Publish package
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --skip-existing dist/*

  release:
    name: Release version
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
